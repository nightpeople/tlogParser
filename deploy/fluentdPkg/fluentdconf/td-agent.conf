####
## System section
##
<system>
  #cpu numbers
  workers 5
</system>


####
## Output descriptions:
##


# Treasure Data (http://www.treasure-data.com/) provides cloud based data
# analytics platform, which easily stores and processes data from td-agent.
# FREE plan is also provided.
# @see http://docs.fluentd.org/articles/http-to-td
#
# This section matches events whose tag is td.DATABASE.TABLE
#<match td.*.*>
#  @type tdlog
#  @id output_td
#  apikey YOUR_API_KEY

#  auto_create_table
#  <buffer>
#    @type file
#    path /var/log/td-agent/buffer/td
#  </buffer>

#  <secondary>
#    @type file
#    path /var/log/td-agent/failed_records
#  </secondary>
#</match>

## match tag=debug.** and dump to console
#<match debug.**>
#  @type stdout
#  @id output_stdout
#</match>

<match tlog>
  @type rewrite_tag_filter
  <rule>
    key table
    pattern /^(.+)$/
    tag ${tag}.$1
  </rule>
</match>

#filter csv parser plugin parse tlog to k:v json by specified tag
<filter tlog.RoleLogin>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iOfficeLv,iHomeLv,iCoin,dtCreateTime,iOnlineTotalTime,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,iCoin:integer,iOnlineTotalTime:integer
  </parse>
</filter>

<filter tlog.RoleLogout>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,dtLoginTime,iRoleId,vClientIp,dtCreateTime,iOnlineTime,iOnlineTotalTime,vRoleName,iCountry,iOfficeLv,iHomeLv,iCoin,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iOnlineTime:integer,iOnlineTotalTime:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,iCoin:integer
  </parse>
</filter>

<filter tlog.CreateAccount>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer
  </parse>
</filter>

<filter tlog.CreateRole>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer
  </parse>
</filter>

<filter tlog.Recharge>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,dtEventTime,iWorldId,iUin,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,vSN,ts,iPayDelta,iNewCash,vSubType,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,ts:integer,iPayDelta:integer,iNewCash:integer
  </parse>
</filter>

<filter tlog.CoinConsume>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iOfficeLv,iHomeLv,iCost,iShopType,iPropType,iPropId,iPropNum,iLoginWay,iNewCash,iOperate
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,iCost:integer,iShopType:integer,iPropType:integer,iPropId:integer,iPropNum:integer,iNewCash:integer,iOperate:integer
  </parse>
</filter>

<filter tlog.MoneyFlow>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iValueBefore,iValueAfter,iValue,iValueType,iOperate,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,iValueBefore:integer,iValueAfter:integer,iValue:integer,iValueType:integer,iOperate:integer
  </parse>
</filter>

<filter tlog.PropFlow>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iOperate,iPropId,iCount,iTotalCount,iIdentifier,iLoginWay
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,iOperate:integer,iPropId:integer,iCount:integer,iTotalCount:integer,iIdentifier:integer
  </parse>
</filter>

<filter tlog.OnlineCount>
  @type parser
  key_name content
  <parse>
    @type csv
    keys dtEventTime,iEventId,iWorldId,iAccountCount
    delimiter |
    parser_type fast
    types iWorldId:integer,iAccountCount:integer
  </parse>
</filter>

<filter tlog.MiniGame>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,miniGameType,level,spendTime
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,level:integer,spendTime:integer
  </parse>
</filter>

<filter tlog.newPlayer>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,isNew,keyEvent
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,isNew:integer,keyEvent:integer
  </parse>
</filter>

<filter tlog.ctask>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,tasktype,chapterId,taskId
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,chapterId:integer,taskId:integer
  </parse>
</filter>

<filter tlog.homeBuild>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,buildingId,levelBefore,levelAfter
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,levelBefore:integer,levelAfter:integer
  </parse>
</filter>

<filter tlog.cityChange>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,dtEventTime,cityId,cityType,countryBefore,countryAfter
    delimiter |
    parser_type fast
    types iWorldId:integer,cityType:integer,countryBefore:integer,countryAfter:integer
  </parse>
</filter>

<filter tlog.gtask>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,maxTimes,times
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,maxTimes:integer,times:integer
  </parse>
</filter>

<filter tlog.heroStar>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,heroId,cost,levelAfter
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,levelAfter:integer
  </parse>
</filter>

<filter tlog.skillLevel>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,heroId,skillId,cost,levelAfter
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,levelAfter:integer
  </parse>
</filter>

<filter tlog.equipUpgrade>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,equipId,cost,levelBefore,levelAfter
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,levelBefore:integer,levelAfter:integer
  </parse>
</filter>

<filter tlog.shop>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,shop,orderId,cost,get
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,orderId:integer
  </parse>
</filter>

<filter tlog.officeRight>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,officeRightId
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer
  </parse>
</filter>

<filter tlog.cityFight>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,cityId,heroId,enemyheroId,isNpc,result,loseTroop,credit
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,cityId:integer,isNpc:integer,result:integer,loseTroop:integer,credit:integer
  </parse>
</filter>

<filter tlog.pve>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,pveType,result,loseTroop
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,pveType:integer,result:integer,loseTroop:integer
  </parse>
</filter>

<filter tlog.climb>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,defeatNum,reward
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,defeatNum:integer
  </parse>
</filter>

<filter tlog.pk>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,rankBefore,rankAfter,result,reward
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,rankBefore:integer,rankAfter:integer,result:integer
  </parse>
</filter>

<filter tlog.pveCombat>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,battleId,repeat,result,reward
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,repeat:integer,result:integer
  </parse>
</filter>

<filter tlog.mining>
  @type parser
  key_name content
  <parse>
    @type csv
    keys iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,result,reward
    delimiter |
    parser_type fast
    types iWorldId:integer,iRoleId:integer,iCountry:integer,iOfficeLv:integer,iHomeLv:integer,result:integer
  </parse>
</filter>


##test
#<match tlog.*>
#  @type stdout
#</match>

#tlog data output to mysql
<worker 0>
  <match tlog.*>
    @type sql
    host  127.0.0.1
    port 3306
    database slg_data
    adapter mysql2
    username root
    password 123456
    socket /tmp/mysql.sock
  
    <table tlog.RoleLogin>
      table RoleLogin
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iOfficeLv,iHomeLv,iCoin,dtCreateTime,iOnlineTotalTime,iLoginWay"
    </table>

    <table tlog.RoleLogout>
      table RoleLogout
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,dtLoginTime,iRoleId,vClientIp,dtCreateTime,iOnlineTime,iOnlineTotalTime,vRoleName,iCountry,iOfficeLv,iHomeLv,iCoin,iLoginWay"
    </table>

    <table tlog.CreateAccount>
      table CreateAccount
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,iLoginWay"
    </table>

    <table tlog.CreateRole>
      table CreateRole
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iLoginWay"
    </table>

    <table tlog.Recharge>
      table Recharge
      column_mapping "iEventId,dtEventTime,iWorldId,iUin,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,vSN,ts,iPayDelta,iNewCash,vSubType,iLoginWay"
    </table>

    <table tlog.CoinConsume>
      table CoinConsume
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vClientIp,vRoleName,iCountry,iOfficeLv,iHomeLv,iCost,iShopType,iPropType,iPropId,iPropNum,iLoginWay,iNewCash,iOperate"
    </table>

    <table tlog.MoneyFlow>
      table MoneyFlow
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iValueBefore,iValueAfter,iValue,iValueType,iOperate,iLoginWay"
    </table>

    <table tlog.PropFlow>
      table PropFlow
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iOperate,iPropId,iCount,iTotalCount,iIdentifier,iLoginWay"
    </table>

    <table tlog.OnlineCount>
      table OnlineCount
      column_mapping "dtEventTime,iEventId,iWorldId,iAccountCount"
    </table>

    <table tlog.MiniGame>
      table "MiniGame"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,miniGameType,level,spendTime"
    </table>

    <table tlog.newPlayer>
      table "newPlayer"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,isNew,keyEvent"
    </table>

    <table tlog.ctask>
      table "ctask"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,tasktype,chapterId,taskId"
    </table>

    <table tlog.homeBuild>
      table "homeBuild"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,buildingId,levelBefore,levelAfter"
    </table>

    <table tlog.cityChange>
      table "cityChange"
      column_mapping "iEventId,iWorldId,dtEventTime,cityId,cityType,countryBefore,countryAfter"
    </table>

    <table tlog.gtask>
      table "gtask"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,maxTimes,times"
    </table>

    <table tlog.heroStar>
      table "heroStar"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,heroId,cost,levelAfter"
    </table>

    <table tlog.skillLevel>
      table "skillLevel"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,heroId,skillId,cost,levelAfter"
    </table>

    <table tlog.equipUpgrade>
      table "equipUpgrade"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,equipId,cost,levelBefore,levelAfter"
    </table>

    <table tlog.shop>
      table "shop"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,shop,orderId,cost,get"
    </table>

    <table tlog.officeRight>
      table "officeRight"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,officeRightId"
    </table>

    <table tlog.cityFight>
      table "cityFight"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,cityId,heroId,enemyheroId,isNpc,result,loseTroop,credit"
    </table>

    <table tlog.pve>
      table "pve"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,pveType,result,loseTroop"
    </table>

    <table tlog.climb>
      table "climb"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,defeatNum,reward"
    </table>

    <table tlog.pk>
      table "pk"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,rankBefore,rankAfter,result,reward"
    </table>

    <table tlog.pveCombat>
      table "pveCombat"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,battleId,repeat,result,reward"
    </table>

    <table tlog.mining>
      table "mining"
      column_mapping "iEventId,iWorldId,iUin,dtEventTime,iRoleId,vRoleName,iCountry,iOfficeLv,iHomeLv,iLoginWay,result,reward"
    </table>

    <table>
      table city
      column_mapping 'id:id,name:name,countryId:countryId,time:time'
    </table>

  </match>
</worker>

####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
#<source>
#  @type forward
#  @id input_forward
#</source>

# tlog file with tail input

<worker 0>
  <source>
    @type tail
    path /home/tmp/logPressureTest/*.log
    pos_file /var/log/td-agent/tlog2.log.pos
    tag tlog
    refresh_interval 60
    read_from_head true
    follow_inodes true
    enable_watch_timer true
    enable_stat_watcher false
 
    <parse>
      @type regexp
      expression /^(?<table>[^\n\r\|]{0,}+)\|(?<content>.{0,})$/
    </parse>

  </source>
</worker>

#<source>
#  @type forward
#  bind 0.0.0.0
#  port 24224
#</source>

##source test
#<source>
#  @type http
#  port 7778
#  bind 0.0.0.0
#</source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
#<source>
#  @type http
#  @id input_http
#  port 8888
#</source>

## live debugging agent
#<source>
#  @type debug_agent
#  @id input_debug_agent
#  bind 127.0.0.1
#  port 24230
#</source>

####
## Examples:
##

## File input
## read apache logs continuously and tags td.apache.access
#<source>
#  @type tail
#  @id input_tail
#  <parse>
#    @type apache2
#  </parse>
#  path /var/log/httpd-access.log
#  tag td.apache.access
#</source>

## File output
## match tag=local.** and write to file
#<match local.**>
#  @type file
#  @id output_file
#  path /var/log/td-agent/access
#</match>

## Forwarding
## match tag=system.** and forward to another td-agent server
#<match system.**>
#  @type forward
#  @id output_system_forward
#
#  <server>
#    host 192.168.0.11
#  </server>
#  # secondary host is optional
#  <secondary>
#    <server>
#      host 192.168.0.12
#    </server>
#  </secondary>
#</match>

## Multiple output
## match tag=td.*.* and output to Treasure Data AND file
#<match td.*.*>
#  @type copy
#  @id output_copy
#  <store>
#    @type tdlog
#    apikey API_KEY
#    auto_create_table
#    <buffer>
#      @type file
#      path /var/log/td-agent/buffer/td
#    </buffer>
#  </store>
#  <store>
#    @type file
#    path /var/log/td-agent/td-%Y-%m-%d/%H.log
#  </store>
#</match>
